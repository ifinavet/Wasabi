@using Wasabi.ViewModels.Events
@inherits UmbracoViewPage<Wasabi.ViewModels.Events.EventAttendeeRegistrationViewModel>

@{
    Layout = "_pages.cshtml";
    Dictionary<string, bool> visibleColumns = Model.Columns;
    Dictionary<string, string> englishToNorwegian = new()
    {
        { nameof(AdministrationAttendee.Username), "Username" },
        { nameof(AdministrationAttendee.FullName), "Navn" },
        { nameof(AdministrationAttendee.Email), "Epost" },
        { nameof(AdministrationAttendee.Allergies), "Allergier" },
        { nameof(AdministrationAttendee.PreferredLanguage), "Språk" }
    };

    Dictionary<string, string> statusEnglishToNorwegian = new()
    {
        { "yes", "Møtt" },
        { "late", "Sen" },
        { "no", "Ikke møtt" },
        { "0", "---" },
        { "", "---" }
    };

    Dictionary<string, string> statusMaterialSymbols = new()
    {
        { "yes", "check_circle" },
        { "late", "directions_run" },
        { "no", "cancel" },
        { "0", "" },
        { "", "" }
    };
}

@section titleText
{
    @Model.Name
}

<div class="page--content--full">
    @await Html.PartialAsync("Event/EventRegisterAttendeeForm", new EventRegisterAttendeeFormViewModel())

    <form action="@Model.Url()" method="get" aria-label="Visible Columns">
        <div class="search-input-wrapper">
            <input type="hidden" name="altTemplate" value="EventAttendeeRegistration">
            @foreach (string column in visibleColumns.Keys.Skip(2))
            {
                <input type="checkbox" name="columns" value="@column" @(visibleColumns[column] ? "checked" : "")>
                <label>@englishToNorwegian[column]</label>
            }
            <input type="submit"/>
        </div>
    </form>

    <button onclick="generateColumns(['fullName', 'username'], 'Deltaker liste kopiert!')">Kopier deltakerliste</button>
    <p>@TempData["status"]</p>
    <table>
        <tr>
            <th onclick="generateColumns(['fullName'], 'Kolonne kopiert')">
                Navn
                <span class="material-symbols-rounded">
                content_copy
            </span>
            </th>
            <th onclick="generateColumns(['username'], 'Kolonne kopiert')">
                Brukernavn
                <span
                    class="material-symbols-rounded">
                content_copy
            </span>
            </th>
            @foreach (KeyValuePair<string, bool> column in visibleColumns.Where(column => column.Value))
            {
                <th onclick="generateColumns(['@(column.Key[0].ToString().ToLower() + column.Key[1..])'], 'Kolonne kopiert')">
                    @englishToNorwegian[column.Key]
                    <span
                        class="material-symbols-rounded">
                    content_copy
                </span>
                </th>
            }
            <th>
                Oppmøte
            </th>
        </tr>
        @foreach (AdministrationAttendee attendee in Model.Attendees)
        {
            <tr>
                <td>@attendee.FullName</td>
                <td>@attendee.Username</td>
                @if (visibleColumns[nameof(attendee.Email)])
                {
                    <td>@attendee.Email</td>
                }
                @if (visibleColumns[nameof(attendee.Allergies)])
                {
                    <td>@attendee.Allergies</td>
                }
                @if (visibleColumns[nameof(attendee.PreferredLanguage)])
                {
                    <td>@attendee.PreferredLanguage</td>
                }
                <td>
                    <div class="attendance-dropdown">
                        <button
                            class="attendance-dropdown__toggle attendance-dropdown__toggle--@attendee.AttendeeStatus">
                        <span
                            class="attendance-dropdown__selected">
                            <span class="material-symbols-rounded attendance-dropdown__icon"></span>
                            <span
                                class="attendance-dropdown__text">@statusEnglishToNorwegian[attendee.AttendeeStatus]</span>
                        </span>
                            <span
                                class="material-symbols-rounded attendance-dropdown__icon">@statusMaterialSymbols[attendee.AttendeeStatus]</span>
                        </button>
                        <div class="attendance-dropdown__menu">
                            <div class="attendance-dropdown__option attendance-dropdown__option--success"
                                 data-value="mott"
                                 onClick="registerAttendeeFromDropdown('@attendee.AttendeeId', '@attendee.AttendeeMemberId', 'yes')">
                                <span
                                    class="material-symbols-rounded attendance-dropdown__icon">@statusMaterialSymbols["yes"]</span>
                                <span class="attendance-dropdown__text">Møtt</span>
                            </div>
                            <div class="attendance-dropdown__option attendance-dropdown__option--warning"
                                 data-value="sen"
                                 onClick="registerAttendeeFromDropdown('@attendee.AttendeeId', '@attendee.AttendeeMemberId', 'late')">
                                <span
                                    class="material-symbols-rounded attendance-dropdown__icon">@statusMaterialSymbols["late"]</span>
                                <span class="attendance-dropdown__text">Sen</span>
                            </div>
                            <div class="attendance-dropdown__option attendance-dropdown__option--error"
                                 data-value="ikke-mott"
                                 onClick="registerAttendeeFromDropdown('@attendee.AttendeeId', '@attendee.AttendeeMemberId', 'no')">
                                <span
                                    class="material-symbols-rounded attendance-dropdown__icon">@statusMaterialSymbols["no"]</span>
                                <span class="attendance-dropdown__text">Ikke Møtt</span>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
        }
    </table>

    <table>
        <tr>
            <th>Studieprogram</th>
            <th>Semester</th>
            <th>Antall</th>
        </tr>
        @foreach (KeyValuePair<string, SortedDictionary<int, int>> el in Model.StudyProgramAndSemester)
        {
            <tr>
                <td>@el.Key</td>
                <td>@el.Value.FirstOrDefault().Key</td>
                <td>@el.Value.FirstOrDefault().Value</td>
            </tr>
            foreach (KeyValuePair<int, int> nestedEl in el.Value.Skip(1))
            {
                <tr>
                    <td></td>
                    <td>@nestedEl.Key</td>
                    <td>@nestedEl.Value</td>
                </tr>
            }
        }
    </table>
</div>

@section Scripts {
    <script src="@Url.Content("~/assets/generated/js/adminRegistration.js")"
            asp-append-version="true"
            type="text/javascript" defer></script>
    <script>
        window.backendData = {
            attendees: @Json.Serialize(Model.Attendees),
            eventId: @Model.Id
        }
    </script>
}